unit uMain_Menu_Emulators_Actions;

interface
uses
  System.Classes,
  System.SysUtils,
  System.UITypes,
  System.UIConsts,
  FMX.Objects,
  FMX.Graphics,
  FMX.Effects,
  FMX.Ani,
  FMX.Types,
  ALFmxStdCtrls,
  ALFmxObjects,
  ALFmxLayouts,
  ALFmxTabControl;

  type TEMULATOR_IMAGE= class(TObject)

    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
    procedure OnMouseClick(Sender: TObject);
  end;

  procedure uMain_Menu_Emulators_Actions_Clear_Selection_Control;

  procedure uMain_Menu_Emulators_Actions_Create_Selection_Control(vTabs: Integer; vLevel: integer);
  procedure uMain_Menu_Emulators_Actions_Create_Selection_Tab(vTab, vLevel: Integer);
  function uMain_Menu_Emulators_Actions_GetBitmap(vNum, vLevel: Integer): TBitmap;

  procedure uMain_Menu_Emulators_Actions_TriggerEmulator;

  procedure uMain_Menu_Emulators_Actions_Arcade_Category;
  procedure uMain_Menu_Emulators_Actions_SubHeader_Level(vCategory: Integer);

  procedure uMain_Menu_Emulators_Actions_Trigger_Click(vTriggerImage: Integer; vBack: Boolean);

  procedure uMain_Menu_Emulators_Actions_HeaderMenu(vMenuIndex: Integer);

  procedure uMain_Menu_Emulators_Actions_Slide_Right;
  procedure uMain_Menu_Emulators_Actions_Slide_Left;

  var
    vEmulator_Image: TEMULATOR_IMAGE;

implementation
uses
  main,
  emu,
  uLoad,
  uLoad_AllTypes,
  uMain_SetAll,
  uMain_Mouse,
  uEmu_Actions;

procedure uMain_Menu_Emulators_Actions_Clear_Selection_Control;
begin
  FreeAndNil(emulation.Selection);
end;

function uMain_Menu_Emulators_Actions_GetBitmap(vNum, vLevel: Integer): TBitmap;
begin
  Result:= TBitmap.Create;
  if vLevel= 0 then
    begin
      case vNum of
        0 : Result.LoadFromFile(emulation.First[0].Image_Path+ emulation.First[0].Menu_Image);
        1 : Result.LoadFromFile(emulation.First[1].Image_Path+ emulation.First[1].Menu_Image);
        2 : Result.LoadFromFile(emulation.First[2].Image_Path+ emulation.First[2].Menu_Image);
        3 : Result.LoadFromFile(emulation.First[3].Image_Path+ emulation.First[3].Menu_Image);
        4 : Result.LoadFromFile(emulation.First[4].Image_Path+ emulation.First[4].Menu_Image);
      end;
    end
  else if vLevel= 1 then
    begin
      Case vNum of
        0: Result.LoadFromFile(emulation.Arcade[0].Image_Path+ emulation.Arcade[0].Menu_Image);
      end;
    end;
end;

procedure uMain_Menu_Emulators_Actions_Create_Selection_Control(vTabs: Integer; vLevel: integer);
var
  vi: Integer;
begin
  emulation.Selection:= TALTabControl.Create(mainScene.Selection.Back);
  emulation.Selection.Name:= 'MainMenu_Selection_Control';
  emulation.Selection.Parent:= mainScene.Selection.Back;
  emulation.Selection.Width:= mainScene.Selection.Back.Width;
  emulation.Selection.Height:= mainScene.Selection.Back.Height;
  emulation.Selection.Visible:= True;

  emulation.Selection_Ani:= TFloatAnimation.Create(emulation.Selection);
  emulation.Selection_Ani.Name:= 'MainMenu_Selection_Ani';
  emulation.Selection_Ani.Parent:= emulation.Selection;
  emulation.Selection_Ani.Duration:= 0.4;
  emulation.Selection_Ani.Interpolation:= TInterpolationType.Quadratic;
  emulation.Selection_Ani.PropertyName:= 'Position.Y';
  emulation.Selection_Ani.Loop:= False;
  emulation.Selection_Ani.OnFinish:= vMain_Mouse.Animation.OnFinish;
  emulation.Selection_Ani.Enabled:= False;

  for vi:= 0 to vTabs do
    uMain_Menu_Emulators_Actions_Create_Selection_Tab(vi, vLevel);
end;


procedure uMain_Menu_Emulators_Actions_Create_Selection_Tab(vTab, vLevel: Integer);
begin
  emulation.Selection_Tab[vTab].Tab:= TALTabItem.Create(emulation.Selection);
  emulation.Selection_Tab[vTab].Tab.Name:= 'Emulator_'+ IntToStr(vTab);
  emulation.Selection_Tab[vTab].Tab.Parent:= emulation.Selection;
  emulation.Selection_Tab[vTab].Tab.Visible:= True;

  emulation.Selection_Tab[vTab].Logo:= TImage.Create(emulation.Selection_Tab[vTab].Tab);
  emulation.Selection_Tab[vTab].Logo.Name:= 'Emulator_Logo_'+ IntToStr(vTab);
  emulation.Selection_Tab[vTab].Logo.Parent:= emulation.Selection_Tab[vTab].Tab;
  emulation.Selection_Tab[vTab].Logo.Width:= 600;
  emulation.Selection_Tab[vTab].Logo.Height:= 186;
  emulation.Selection_Tab[vTab].Logo.Position.X:= (emulation.Selection.Width/ 2)- 300;
  emulation.Selection_Tab[vTab].Logo.Position.Y:= (emulation.Selection.Height/ 2)- 93;
  emulation.Selection_Tab[vTab].Logo.Bitmap:= uMain_Menu_Emulators_Actions_GetBitmap(vTab, vLevel);
  emulation.Selection_Tab[vTab].Logo.OnMouseEnter:= vEmulator_Image.OnMouseEnter;
  emulation.Selection_Tab[vTab].Logo.OnMouseLeave:= vEmulator_Image.OnMouseLeave;
  emulation.Selection_Tab[vTab].Logo.OnClick:= vEmulator_Image.OnMouseClick;
  emulation.Selection_Tab[vTab].Logo.Tag:= vTab;
  emulation.Selection_Tab[vTab].Logo.Visible:= True;

  emulation.Selection_Tab[vTab].Logo_Glow:= TGlowEffect.Create(emulation.Selection_Tab[vTab].Logo);
  emulation.Selection_Tab[vTab].Logo_Glow.Name:= 'Emulator_Logo_Glow_'+ IntToStr(vTab);
  emulation.Selection_Tab[vTab].Logo_Glow.Parent:= emulation.Selection_Tab[vTab].Logo;
  emulation.Selection_Tab[vTab].Logo_Glow.Opacity:= 0.9;
  emulation.Selection_Tab[vTab].Logo_Glow.Softness:= 0.4;
  emulation.Selection_Tab[vTab].Logo_Glow.GlowColor:= TAlphaColorRec.Deepskyblue;
  emulation.Selection_Tab[vTab].Logo_Glow.Tag:= vTab;
  emulation.Selection_Tab[vTab].Logo_Glow.Enabled:= False;

  emulation.Selection_Tab[vTab].Story:= TText.Create(emulation.Selection_Tab[vTab].Tab);
  emulation.Selection_Tab[vTab].Story.Name:= 'Emulator_Story_'+ IntToStr(vTab);
  emulation.Selection_Tab[vTab].Story.Parent:= emulation.Selection_Tab[vTab].Tab;
  emulation.Selection_Tab[vTab].Story.Position.X:= extrafe.res.Width- 200;
  emulation.Selection_Tab[vTab].Story.Position.Y:= 100;
  emulation.Selection_Tab[vTab].Story.TextSettings.FontColor:= claWhite;
  emulation.Selection_Tab[vTab].Story.Text:= 'gaksfgsakd';
  emulation.Selection_Tab[vTab].Story.Visible:= True;
end;

procedure uMain_Menu_Emulators_Actions_TriggerEmulator;
begin
  Main_Form.Visible:= False;
  uEmu_LoadEmulator(Emulation.Number);
  Emu_Form.Show;
end;


procedure uMain_Menu_Emulators_Actions_Arcade_Category;
begin
  emulation.Level:= 1;
  emulation.Category:= 0;
  uMain_Menu_Emulators_Actions_Clear_Selection_Control;
  uMain_Menu_Emulators_Actions_Create_Selection_Control(0, emulation.Level);
  emulation.Selection.TabIndex:= 0;
end;

procedure uMain_Menu_Emulators_Actions_SubHeader_Level(vCategory: Integer);
begin
  case vCategory of
    0 : uMain_Menu_Emulators_Actions_Arcade_Category;
    1 : ;
    2 : ;
    3 : ;
    4 : ;
  end;
end;


procedure uMain_Menu_Emulators_Actions_Trigger_Click(vTriggerImage: Integer; vBack: Boolean);
begin
  if vBack then
    begin
      if emulation.Level= 1 then
        begin
          uMain_Menu_Emulators_Actions_Clear_Selection_Control;
          uMain_Menu_Emulators_Actions_HeaderMenu(emulation.Category);
        end;
    end
  else
    begin
      if emulation.Level= 0 then
        begin
          uMain_Menu_Emulators_Actions_SubHeader_Level(vTriggerImage);
        end
      else
        begin
          Emulation.Number:= vTriggerImage;
          uMain_Menu_Emulators_Actions_TriggerEmulator;
        end;
    end;
end;

procedure uMain_Menu_Emulators_Actions_HeaderMenu(vMenuIndex: Integer);
begin
  emulation.Level:= 0;
  uMain_Menu_Emulators_Actions_Create_Selection_Control(4, emulation.Level);
  emulation.Selection.TabIndex:= vMenuIndex;
  emulation.Category:= -1;
end;

////////////////////////////////////////////////////////////////////////////////
procedure uMain_Menu_Emulators_Actions_Slide_Right;
begin
  if extrafe.prog.State= 'main' then
    if emulation.Selection.TabCount- 1<> emulation.Selection.TabIndex then
      emulation.Selection.Next();
end;

procedure uMain_Menu_Emulators_Actions_Slide_Left;
begin
  if extrafe.prog.State= 'main' then
    if emulation.Selection.TabIndex<> 0 then
      emulation.Selection.Previous();
end;

{ TEMULATOR_IMAGE }

procedure TEMULATOR_IMAGE.OnMouseClick(Sender: TObject);
begin
  if extrafe.prog.State= 'main' then
    begin
      uMain_Menu_Emulators_Actions_Trigger_Click(TImage(Sender).Tag, False);
    end;
end;

procedure TEMULATOR_IMAGE.OnMouseEnter(Sender: TObject);
begin
  if extrafe.prog.State= 'main' then
    begin
      extrafe.main.emulators.Selection_Tab[TImage(Sender).Tag].Logo_Glow.Enabled:= True;
    end;
end;

procedure TEMULATOR_IMAGE.OnMouseLeave(Sender: TObject);
begin
  if extrafe.prog.State= 'main' then
    begin
      extrafe.main.emulators.Selection_Tab[TImage(Sender).Tag].Logo_Glow.Enabled:= False;
    end;
end;


initialization

vEmulator_Image:= TEMULATOR_IMAGE.Create;

finalization

vEmulator_Image.Free;

end.
