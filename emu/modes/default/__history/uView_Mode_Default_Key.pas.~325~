unit uView_Mode_Default_Key;

interface

uses
  System.Classes,
  System.SysUtils,
  System.UITypes,
  System.StrUtils,
  BASS;

procedure Key(vKey: String);
procedure Key_Up(vKey: String);

procedure Virtual_Keyboard_Actions(vKey: String);
procedure Main_Mode_Actions(vKey: String);
procedure Game_Mode_Actions(vKey: String);
procedure Lists_Mode_Actions(vKey: String);
procedure Filters_Mode_Actions(vKey: String);
procedure Search_Mode_Actions(vKey: String);
procedure Screensaver_Mode_Actions(vKey: String);

procedure Search_Key(vString: String);

var
  vOldKey_State: String;

implementation

uses
  uDB_AUser,
  uKeyboard,
  uVirtual_Keyboard,
  uView_Mode_Default_AllTypes,
  uView_Mode_Default_Actions,
  uView_Mode_Default_Actions_Filters,
  uView_Mode_Default_Game;

procedure Key(vKey: String);
begin
  if vKey <> vOldKey_State then
  begin
    if Emu_VM_Default_Var.Video.Screensaver = false then
    begin
      if (uDB_AUser.Local.OPTIONS.Visual.Virtual_Keyboard) and (Emu_VM_Default_Var.Search_Open) then
        Virtual_Keyboard_Actions(vKey)
      else
      begin
        if Emu_VM_Default_Var.Game_Loading = false then
        begin
          if Emu_VM_Default_Var.Search_Open then
            Search_Mode_Actions(vKey)
          else if Emu_VM_Default_Var.Game_Mode then
            Game_Mode_Actions(vKey)
          else if Emu_VM_Default_Var.Lists_Open then
            Lists_Mode_Actions(vKey)
          else if Emu_VM_Default_Var.Filters_Open then
            Filters_Mode_Actions(vKey)
          else
            Main_Mode_Actions(vKey);
        end;
      end;
    end
    else
      Screensaver_Mode_Actions(vKey);
  end;
  vOldKey_State := vKey;
end;

procedure Key_Up(vKey: String);
begin
  if (Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Down) or (Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Up) or
    (Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Left) or (Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Right) then
  begin
    vOldKey_State := '';
    uView_Mode_Default_Actions.vMove_Timer.Enabled := false;
    if Emu_VM_Default_Var.Favorites_Open then
      Refresh_Load_Icons(Emu_VM_Default_Var.gamelist.Selected, Emu_VM_Default_Var.gamelist.Total_Games, Emu_VM_Default_Var.favorites.Roms)
    else
      Refresh_Load_Icons(Emu_VM_Default_Var.gamelist.Selected, Emu_VM_Default_Var.gamelist.Total_Games, Emu_VM_Default_Var.gamelist.Roms);

    Emu_VM_Default.gamelist.gamelist.Timer.Enabled := True;
  end;
end;

{ Actions Key Down }

procedure Main_Mode_Actions(vKey: String);
begin
  if Emu_VM_Default_Var.Search_Open = false then
  begin
    if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Escape then
      uView_Mode_Default_Actions.Exit_Action
    else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Action then
      if uVirtual_Keyboard.vKey.Enter_Pressed then
        uVirtual_Keyboard.vKey.Enter_Pressed := false
      else
        uView_Mode_Default_Actions.Enter;
  end;

  if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Down then
    uView_Mode_Default_Actions.Move_Gamelist('DOWN')
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Up then
    uView_Mode_Default_Actions.Move_Gamelist('UP')
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Left then
    uView_Mode_Default_Actions.Move_Gamelist('PAGE UP')
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Right then
    uView_Mode_Default_Actions.Move_Gamelist('PAGE DOWN')
  else if UpperCase(vKey) = 'HOME' then
    uView_Mode_Default_Actions.Move_Gamelist('HOME')
  else if UpperCase(vKey) = 'END' then
    uView_Mode_Default_Actions.Move_Gamelist('END')
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Favorite then
    uView_Mode_Default_Actions.Favorites_Open
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_FavoriteAdd then
    uView_Mode_Default_Actions.Favorites_Add
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Search then
  begin
    Emu_VM_Default_Var.search.vString := 'First';
    uView_Mode_Default_Actions.Search_Open;
  end
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Lists then
    uView_Mode_Default_Actions.Lists_Action
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Filters then
    uView_Mode_Default_Actions.Filters_Action
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_ScreenSaver then
    uView_Mode_Default_Actions.Screensaver;
end;

procedure Game_Mode_Actions(vKey: String);
begin
  if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Escape then
    uView_Mode_Default_Actions.Exit_Action
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Down then
    uView_Mode_Default_Game.Menu_Down
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Up then
    uView_Mode_Default_Game.Menu_Up
  else if Emu_VM_Default_Var.game.Selected = 3 then
  begin
    if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Left then
      // here to go from one panel to another
  end;
end;

procedure Lists_Mode_Actions(vKey: String);
begin

end;

procedure Filters_Mode_Actions(vKey: String);
begin

end;

procedure Search_Mode_Actions(vKey: String);
begin
  if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Escape then
  begin
    uView_Mode_Default_Actions.Search_Open;
    Emu_VM_Default_Var.gamelist.Selected := Emu_VM_Default_Var.search.Selected;
    uView_Mode_Default_Actions.Refresh;
  end
  else if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Action then
    uView_Mode_Default_Actions.Search_Open
  else if UpperCase(vKey) = 'BACKSPACE' then
    uView_Mode_Default_Actions.Search_Backspace
  else if UpperCase(vKey) = 'SPACE' then
    Emu_VM_Default_Var.search.vString := Emu_VM_Default_Var.search.vString + ' '
  else
  begin
    if AnsiContainsText('A B C D E F G H I G K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 0 '' ( ) @ ! $ % ^ & * : < > ?', vKey) then
    begin
      if Emu_VM_Default_Var.search.vString = 'First' then
        Emu_VM_Default_Var.search.vString := '';
      Emu_VM_Default_Var.search.vString := Emu_VM_Default_Var.search.vString + vKey;
      Emu_VM_Default_Var.search.vKey := vKey;
    end;
  end;
end;

procedure Screensaver_Mode_Actions(vKey: String);
begin
  if Right_VKey(vKey) = uDB_AUser.Local.MAP.Keyboard.Emu_Escape then
    uView_Mode_Default_Actions.Screensaver_Leave;
end;

procedure Virtual_Keyboard_Actions(vKey: String);
var
  vStringResult: String;
  vIntegerResult: Integer;
  vGameName: String;
  vi, ri, vk: Integer;
  vFoundResult: Boolean;
  vFoundDrop: Boolean;
begin
  if uVirtual_Keyboard.vKey.OPTIONS.vType = 'Search' then
  begin
    if (UpperCase(vKey) <> 'ENTER') and (UpperCase(vKey) <> 'ESC') and (UpperCase(vKey) <> 'UP') and (UpperCase(vKey) <> 'DOWN') and (UpperCase(vKey) <> 'LEFT')
      and (UpperCase(vKey) <> 'RIGHT') then
    begin
      vFoundResult := false;
      vFoundDrop := false;
      vStringResult := uVirtual_Keyboard.vKey.Construct.Edit.Edit.Text;
      if vStringResult = '' then
      begin
        Emu_VM_Default_Var.gamelist.Selected := Emu_VM_Default_Var.search.Selected;
        uView_Mode_Default_Actions.Refresh;
        uVirtual_Keyboard.Clear_Drop;
        uVirtual_Keyboard.vKey.Construct.Title.Text.Text := 'Search for a game';
      end
      else
      begin
        vIntegerResult := Length(vStringResult);
        for vi := 0 to Emu_VM_Default_Var.gamelist.Total_Games - 1 do
        begin
          if Emu_VM_Default_Var.Favorites_Open then
            vGameName := Copy(Emu_VM_Default_Var.favorites.games[vi], 0, vIntegerResult)
          else
            vGameName := Copy(Emu_VM_Default_Var.gamelist.games[vi], 0, vIntegerResult);
          if UpperCase(vStringResult) = UpperCase(vGameName) then
          begin
            vFoundResult := True;
            Break
          end;
        end;

        if vFoundResult then
        begin
          Emu_VM_Default_Var.gamelist.Selected := vi;
          if Emu_VM_Default_Var.Favorites_Open then
          begin
            uVirtual_Keyboard.vKey.Construct.Title.Text.Text := Emu_VM_Default_Var.favorites.games[vi];
            if FileExists(uDB_AUser.Local.EMULATORS.Arcade_D.Media.Icons + Emu_VM_Default_Var.favorites.Roms[Emu_VM_Default_Var.gamelist.Selected] + '.ico')
            then
              uVirtual_Keyboard.vKey.Construct.Title.Game_Icon.Bitmap.LoadFromFile(uDB_AUser.Local.EMULATORS.Arcade_D.Media.Icons +
                Emu_VM_Default_Var.favorites.Roms[Emu_VM_Default_Var.gamelist.Selected] + '.ico')
            else
              uVirtual_Keyboard.vKey.Construct.Title.Game_Icon.Bitmap.LoadFromFile(Emu_XML.Images_Path + 'emu_mame.png');
          end
          else
          begin
            uVirtual_Keyboard.vKey.Construct.Title.Text.Text := Emu_VM_Default_Var.gamelist.games[vi];
            if FileExists(uDB_AUser.Local.EMULATORS.Arcade_D.Media.Icons + Emu_VM_Default_Var.gamelist.Roms[Emu_VM_Default_Var.gamelist.Selected] + '.ico') then
              uVirtual_Keyboard.vKey.Construct.Title.Game_Icon.Bitmap.LoadFromFile(uDB_AUser.Local.EMULATORS.Arcade_D.Media.Icons +
                Emu_VM_Default_Var.gamelist.Roms[Emu_VM_Default_Var.gamelist.Selected] + '.ico')
            else
              uVirtual_Keyboard.vKey.Construct.Title.Game_Icon.Bitmap.LoadFromFile(Emu_XML.Images_Path + 'emu_mame.png');
          end;
          inc(vi, 1);
          uView_Mode_Default_Actions.Refresh;
          uVirtual_Keyboard.Clear_Drop;
          vk := 0;
          for ri := 0 to 20 do
          begin
            if vi < Emu_VM_Default_Var.gamelist.Total_Games then
            begin
              if Emu_VM_Default_Var.Favorites_Open then
                vGameName := Copy(Emu_VM_Default_Var.favorites.games[vi + ri], 0, vIntegerResult)
              else
                vGameName := Copy(Emu_VM_Default_Var.gamelist.games[vi + ri], 0, vIntegerResult);
              if UpperCase(vStringResult) = UpperCase(vGameName) then
              begin
                if (ri = 20) and (vk = 20) then
                  uVirtual_Keyboard.Drop(vk, '...', '')
                else
                begin
                  if Emu_VM_Default_Var.Favorites_Open then
                  begin
                    if FileExists(uDB_AUser.Local.EMULATORS.Arcade_D.Media.Icons + Emu_VM_Default_Var.favorites.Roms[vi + ri] + '.ico') then
                      uVirtual_Keyboard.Drop(vk, Emu_VM_Default_Var.favorites.games[vi + ri], uDB_AUser.Local.EMULATORS.Arcade_D.Media.Icons +
                        Emu_VM_Default_Var.favorites.Roms[vi + ri] + '.ico')
                    else
                      uVirtual_Keyboard.Drop(vk, Emu_VM_Default_Var.favorites.games[vi + ri], Emu_XML.Images_Path + 'emu_mame.png');
                  end
                  else
                  begin
                    if FileExists(uDB_AUser.Local.EMULATORS.Arcade_D.Media.Icons + Emu_VM_Default_Var.gamelist.Roms[vi + ri] + '.ico') then
                      uVirtual_Keyboard.Drop(vk, Emu_VM_Default_Var.gamelist.games[vi + ri], uDB_AUser.Local.EMULATORS.Arcade_D.Media.Icons +
                        Emu_VM_Default_Var.gamelist.Roms[vi + ri] + '.ico')
                    else
                      uVirtual_Keyboard.Drop(vk, Emu_VM_Default_Var.gamelist.games[vi + ri], Emu_XML.Images_Path + 'emu_mame.png');
                  end;
                  inc(vk);
                end;
              end
            end;
          end;
        end
        else
        begin
          vStringResult := uVirtual_Keyboard.vKey.Construct.Edit.Edit.Text;
          Delete(vStringResult, Length(vStringResult), 1);
          uVirtual_Keyboard.vKey.Construct.Edit.Edit.Text := vStringResult;
          uVirtual_Keyboard.vKey.Construct.Edit.Edit.SelStart := Length(uVirtual_Keyboard.vKey.Construct.Edit.Edit.Text);
          BASS_ChannelPlay(Emu_VM_Default_Var.sounds.VK_Click, false);
        end;
      end;
    end
    else
    begin
      if UpperCase(vKey) = 'UP' then
      begin
        Dec(Emu_VM_Default_Var.gamelist.Selected);
        uView_Mode_Default_Actions.Refresh;
      end
      else if UpperCase(vKey) = 'DOWN' then
      begin
        inc(Emu_VM_Default_Var.gamelist.Selected);
        uView_Mode_Default_Actions.Refresh;
      end
      else if UpperCase(vKey) = 'ESC' then
      begin
        if not uVirtual_Keyboard.vKey.Enter_Pressed then
        begin
          Emu_VM_Default_Var.gamelist.Selected := Emu_VM_Default_Var.search.Selected;
          uView_Mode_Default_Actions.Refresh;
          uVirtual_Keyboard.Animation(false);
          Emu_VM_Default_Var.Search_Open := false;
        end;
      end
      else if UpperCase(vKey) = 'ENTER' then
      begin
        if not uVirtual_Keyboard.vKey.Enter_Pressed then
        begin
          vFoundDrop := false;
          uVirtual_Keyboard.Animation(false);
          Emu_VM_Default_Var.Search_Open := false;
        end
      end;
    end;
  end;
end;

procedure Search_Key(vString: String);
var
  vGameName: String;
  vi: Integer;
begin
  if vString = '' then
  begin
    Emu_VM_Default_Var.gamelist.Selected := Emu_VM_Default_Var.search.Selected;
    uView_Mode_Default_Actions.Refresh;
  end
  else
  begin
    for vi := 0 to Emu_VM_Default_Var.gamelist.Total_Games - 1 do
    begin
      if Emu_VM_Default_Var.Favorites_Open then
        vGameName := Copy(Emu_VM_Default_Var.favorites.games[vi], 0, Length(vString))
      else
        vGameName := Copy(Emu_VM_Default_Var.gamelist.games[vi], 0, Length(vString));
      if UpperCase(vString) = UpperCase(vGameName) then
      begin
        Emu_VM_Default_Var.gamelist.Selected := vi;
        uView_Mode_Default_Actions.Refresh;
        Break
      end;
    end;
    if UpperCase(vString) <> UpperCase(vGameName) then
    begin
      // Delete(vSearch.Actions.Search_Str, length(uSnippet_Search.vSearch.Actions.Search_Str), 1);
      // uSnippet_Search.vSearch.Scene.Edit.Text := uSnippet_Search.vSearch.Actions.Search_Str_Clear;
      // BASS_ChannelPlay(mame.Sound.Effects[0], False);
      // uSnippet_Search.vSearch.Actions.Str_Error := True;
    end;
  end;
end;

end.
