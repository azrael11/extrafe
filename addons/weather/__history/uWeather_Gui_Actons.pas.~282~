unit uWeather_Gui_Actons;

interface
uses
  Classes,
  FMX.Graphics,
  FMX.Objects,
  FMX.StdCtrls,
  FMX.Dialogs,
  FMX.Grid,
  System.UITypes;

  type TWEATHER_ADDON_PANEL= class(TObject)
    procedure OnMouseClick(Sender: TObject);
    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
  end;

  type TWEATHER_ADDON_TEXT= class(TObject)
    procedure OnMouseClick(Sender: TObject);
    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
  end;

  type TWEATHER_ADDON_TLABEL= class(TObject)
    procedure OnMouseClick(Sender: TObject);
    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
  end;

  type TWEATHER_ADDON_IMAGE= class(TObject)
    procedure OnMouseClick(Sender: TObject);
    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
  end;

  type TWEATHER_ADDON_BUTTON= class(TObject)
    procedure OnMouseClick(Sender: TObject);
    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
  end;

  type TWEATHER_ADDON_SPEEDBUTTON= class(TObject)
    procedure OnMouseClick(Sender: TObject);
    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
  end;

  type TWEATHER_ADDON_STRIGGRID= class(TObject)
    procedure OnMouseClick(Sender: TObject);
    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
  end;

  type TWEATHER_ADDON_CHECKBOX= class(TObject)
    procedure OnMouseClick(Sender: TObject);
    procedure OnMouseEnter(Sender: TObject);
    procedure OnMouseLeave(Sender: TObject);
  end;


  var
    vWeather_Image: TWEATHER_ADDON_IMAGE;
    vWeather_Button: TWEATHER_ADDON_BUTTON;
    vWeather_Panel: TWEATHER_ADDON_PANEL;
    vWeather_Text: TWEATHER_ADDON_TEXT;
    vWeather_Label: TWEATHER_ADDON_TLABEL;
    vWeather_Speedbutton: TWEATHER_ADDON_SPEEDBUTTON;
    vWeather_Striggrid: TWEATHER_ADDON_STRIGGRID;
    vWeather_Checkbox: TWEATHER_ADDON_CHECKBOX;

implementation
uses
  uLoad,
  main,
  uWeather_SetAll,
  uWeather_Config,
  uWeather_Config_Provider,
  uWeather_Config_Towns,
  uWeather_MenuActions,
  uWeather_Config_Iconsets;

{ TWEATHER_ADDON_IMAGE }

procedure TWEATHER_ADDON_IMAGE.OnMouseClick(Sender: TObject);
begin
  if TImage(Sender).TagFloat= 100 then
    uWeather_Config_Iconsets_UseIconSet(addons.weather.Iconset_Names.Strings[TImage(Sender).Tag])
  else if TImage(Sender).Name= 'A_W_ArrowLeft_Image' then
   uWeather_MenuActions_SlideLeft
  else if TImage(Sender).Name= 'A_W_ArrowRight_Image' then
   uWeather_MenuActions_SlideRight
  else if TImage(Sender).Name= 'A_W_Settings_Image' then
    uWeather_Config_ShowHide(not addons.weather.ShowConfig)
end;

procedure TWEATHER_ADDON_IMAGE.OnMouseEnter(Sender: TObject);
begin
  if TImage(Sender).TagFloat= 1000 then
    vWeatherConfig.Towns_Town[TImage(Sender).Tag].Glow_Panel.Enabled:= True
  else if TImage(Sender).TagFloat= 100 then
    vWeatherConfig.Iconsets_Mini[TImage(Sender).Tag].Panel_Glow.Enabled:= True
  else if TImage(Sender).Name= 'A_W_ArrowLeft_Image' then
    vWeatherAddon.Arrow_Left_Glow.Enabled:= True
  else if TImage(Sender).Name= 'A_W_ArrowRight_Image' then
    vWeatherAddon.Arrow_Right_Glow.Enabled:= True
  else if TImage(Sender).Name= 'A_W_Settings_Image' then
    vWeatherAddon.Settings_Glow.Enabled:= True;
end;

procedure TWEATHER_ADDON_IMAGE.OnMouseLeave(Sender: TObject);
begin
  if TImage(Sender).TagFloat= 1000 then
    vWeatherConfig.Towns_Town[TImage(Sender).Tag].Glow_Panel.Enabled:= False
  else if TImage(Sender).TagFloat= 100 then
    vWeatherConfig.Iconsets_Mini[TImage(Sender).Tag].Panel_Glow.Enabled:= False
  else if TImage(Sender).Name= 'A_W_ArrowLeft_Image' then
    vWeatherAddon.Arrow_Left_Glow.Enabled:= False
  else if TImage(Sender).Name= 'A_W_ArrowRight_Image' then
    vWeatherAddon.Arrow_Right_Glow.Enabled:= False
  else if TImage(Sender).Name= 'A_W_Settings_Image' then
    vWeatherAddon.Settings_Glow.Enabled:= False;
end;

{ TWEATHER_ADDON_BUTTON }

procedure TWEATHER_ADDON_BUTTON.OnMouseClick(Sender: TObject);
begin
  if TButton(Sender).Name= 'Weather_Config_Left_Provider_Button' then
    uWeather_Config_ShowPanel(0)
  else if TButton(Sender).Name= 'Weather_Config_Left_Towns_Button' then
    uWeather_Config_ShowPanel(1)
  else if TButton(Sender).Name= 'Weather_Config_Left_Options_Button' then
    uWeather_Config_ShowPanel(2)
  else if TButton(Sender).Name= 'Weather_Config_Left_Iconsets_Button' then
    uWeather_Config_ShowPanel(3)
  else if TButton(Sender).Name= 'Weather_Config_AddTown_Button_OK' then
    uWeather_Config_Towns_AddNewTown_Panel
  else if TButton(Sender).Name= 'Weather_Config_AddTown_Button_Cancel' then
    uWeather_Config_Towns_CloseAdd;
end;

procedure TWEATHER_ADDON_BUTTON.OnMouseEnter(Sender: TObject);
begin

end;

procedure TWEATHER_ADDON_BUTTON.OnMouseLeave(Sender: TObject);
begin

end;

{ TWEATHER_ADDON_PANEL }

procedure TWEATHER_ADDON_PANEL.OnMouseClick(Sender: TObject);
begin

end;

procedure TWEATHER_ADDON_PANEL.OnMouseEnter(Sender: TObject);
begin
  if TPanel(Sender).TagFloat= 1000 then
    vWeatherConfig.Towns_Town[TPanel(Sender).Tag].Glow_Panel.Enabled:= True
  else if TPanel(Sender).TagFloat= 100 then
    vWeatherConfig.Iconsets_Mini[TPanel(Sender).Tag].Panel_Glow.Enabled:= True;
end;

procedure TWEATHER_ADDON_PANEL.OnMouseLeave(Sender: TObject);
begin
  if TPanel(Sender).TagFloat= 1000 then
    vWeatherConfig.Towns_Town[TPanel(Sender).Tag].Glow_Panel.Enabled:= False
  else if TPanel(Sender).TagFloat= 100 then
    vWeatherConfig.Iconsets_Mini[TPanel(Sender).Tag].Panel_Glow.Enabled:= False;
end;

{ TWEATHER_ADDON_TEXT }

procedure TWEATHER_ADDON_TEXT.OnMouseClick(Sender: TObject);
begin

end;

procedure TWEATHER_ADDON_TEXT.OnMouseEnter(Sender: TObject);
begin
  
end;

procedure TWEATHER_ADDON_TEXT.OnMouseLeave(Sender: TObject);
begin

end;

{ TWEATHER_ADDON_TLABEL }

procedure TWEATHER_ADDON_TLABEL.OnMouseClick(Sender: TObject);
begin

end;

procedure TWEATHER_ADDON_TLABEL.OnMouseEnter(Sender: TObject);
begin
  if TLabel(Sender).TagFloat= 1000 then
    begin
      vWeatherConfig.Towns_Town[TLabel(Sender).Tag].Glow_Panel.Enabled:= True;
    end;
end;

procedure TWEATHER_ADDON_TLABEL.OnMouseLeave(Sender: TObject);
begin
  if TLabel(Sender).TagFloat= 1000 then
    begin
      vWeatherConfig.Towns_Town[TLabel(Sender).Tag].Glow_Panel.Enabled:= False;
    end;
end;

{ TWEATHER_ADDON_SPEEDBUTTON }

procedure TWEATHER_ADDON_SPEEDBUTTON.OnMouseClick(Sender: TObject);
begin
  if TSpeedButton(Sender).TagFloat= 100 then
    uWeather_Config_Iconsets_ShowSet(addons.weather.Iconset_Names.Strings[TSpeedButton(Sender).Tag])
  else if TSpeedButton(Sender).Name= 'Weather_Config_Iconsets_SpeedButton' then
    uWeather_Config_Iconsets_ReturnToPreview
  else if TSpeedButton(Sender).Name= 'Weather_Config_Towns_Add_SpeedButton' then
    uWeather_Config_Towns_ShowAdd
  else if TSpeedButton(Sender).Name= 'Weather_Config_Towns_RefreshAll_SpeedButton' then
    uWeather_Config_Towsn_RefreshTownAll
  else if TSpeedButton(Sender).Name= 'Weather_Config_Towns_DeleteAll_SpeedButton' then
    uWeather_Config_Towns_DeleteTownAll
  else if TSpeedButton(Sender).Name= 'Weather_Config_AddTonw_SpeedButton' then
    uWeather_Config_Towns_FindCurrentTown(vWeatherConfig.Towns_Add_FindTown_Edit.Text);
end;

procedure TWEATHER_ADDON_SPEEDBUTTON.OnMouseEnter(Sender: TObject);
begin
  if TSpeedButton(Sender).TagFloat= 1000 then
    vWeatherConfig.Towns_Town[TSpeedButton(Sender).Tag].Glow_Panel.Enabled:= True
  else if TSpeedButton(Sender).TagFloat= 100 then
    vWeatherConfig.Iconsets_Mini[TSpeedButton(Sender).Tag].Panel_Glow.Enabled:= True;
end;

procedure TWEATHER_ADDON_SPEEDBUTTON.OnMouseLeave(Sender: TObject);
begin
  if TSpeedButton(Sender).TagFloat= 1000 then
    vWeatherConfig.Towns_Town[TSpeedButton(Sender).Tag].Glow_Panel.Enabled:= False
  else if TSpeedButton(Sender).TagFloat= 100 then
    vWeatherConfig.Iconsets_Mini[TSpeedButton(Sender).Tag].Panel_Glow.Enabled:= False;
end;

{ TWEATHER_ADDON_STRIGGRID }

procedure TWEATHER_ADDON_STRIGGRID.OnMouseClick(Sender: TObject);
begin
  if TStringGrid(Sender).Name= 'Weather_Config_AddTown_StringGrid' then
    begin
      vSelectedTown:= TStringGrid(Sender).Selected;
      vWeatherConfig.Towns_Add_Button_OK.Enabled:= True;
    end;
end;

procedure TWEATHER_ADDON_STRIGGRID.OnMouseEnter(Sender: TObject);
begin

end;

procedure TWEATHER_ADDON_STRIGGRID.OnMouseLeave(Sender: TObject);
begin

end;


{ TWEATHER_ADDON_CHECKBOX }

procedure TWEATHER_ADDON_CHECKBOX.OnMouseClick(Sender: TObject);
begin
  if TCheckBox(Sender).Name= 'Weather_Config_Provider_Yahoo_CheckBox' then
    uWeather_Config_Provider_YahooCheck
  else if TCheckBox(Sender).Name= 'Weather_Config_Options_Degree_Celcius_Checkbox' then
  else if TCheckBox(Sender).Name= 'Weather_Config_Options_Degree_Fahrenheit_Checkbox' then
  else if TCheckBox(Sender).Name= 'Weather_Config_Options_Refresh_Every_Checkbox' then
  else if TCheckBox(Sender).Name= 'Weather_Config_Options_Refresh_Once_Checkbox' then
end;

procedure TWEATHER_ADDON_CHECKBOX.OnMouseEnter(Sender: TObject);
begin

end;

procedure TWEATHER_ADDON_CHECKBOX.OnMouseLeave(Sender: TObject);
begin

end;

initialization

vWeather_Image:= TWEATHER_ADDON_IMAGE.Create;
vWeather_Button:= TWEATHER_ADDON_BUTTON.Create;
vWeather_Panel:= TWEATHER_ADDON_PANEL.Create;
vWeather_Text:= TWEATHER_ADDON_TEXT.Create;
vWeather_Label:= TWEATHER_ADDON_TLABEL.Create;
vWeather_Speedbutton:= TWEATHER_ADDON_SPEEDBUTTON.Create;
vWeather_Striggrid:= TWEATHER_ADDON_STRIGGRID.Create;
vWeather_Checkbox:= TWEATHER_ADDON_CHECKBOX.Create;

finalization

vWeather_Image.Free;
vWeather_Button.Free;
vWeather_Panel.Free;
vWeather_Text.Free;
vWeather_Label.Free;
vWeather_Speedbutton.Free;
vWeather_Striggrid.Free;
vWeather_Checkbox.Free;

end.
