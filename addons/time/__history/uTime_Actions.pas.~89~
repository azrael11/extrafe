unit uTime_Actions;

interface

uses
  System.Classes,
  System.SysUtils;

procedure Load;
procedure Free;

procedure Get_Data;

procedure ShowTab(vTab: Integer);

implementation
uses
  uLoad_AllTypes,
  uTime_Time_Actions,
  uTime_AllTypes,
  uTime_SetAll,
  uTime_Time_SetAll,
  uTime_Sounds,
  uDB,
  uDB_AUser;

procedure Load;
begin
  uTime_Sounds_Load;
  uTime_SetAll_Set;
end;

procedure ShowTab(vTab: Integer);
var
  vi: Integer;
begin
  for vi := 0 to 4 do
  begin
    vTime.Tab[vi].Back_Glow.Enabled := False;
    if Assigned(vTime.P_Time.Back) then
      uTime_Time_SetAll_Free;
  end;

  case vTab of
    0:
      uTime_Time_SetAll_Set;
  end;
  vTime.Tab[vTab].Back_Glow.Enabled := True;
  vTime.Tab_Selected := vTab;
end;

procedure Free;
var
  vi: Integer;
begin
  for vi := 0 to 4 do
    FreeAndNil(vTime.Tab[vi]);
  uTime_Time_SetAll_Free;
  FreeAndNil(vTime.Time);
end;

procedure Get_Data;
var
  vQuery: String;
begin
  vQuery := 'SELECT * FROM ADDON_TIME WHERE USER_ID=' + uDB_AUser.Local.Num.ToString;
  uDB.ExtraFE_Query_Local.Close;
  uDB.ExtraFE_Query_Local.SQL.Clear;
  uDB.ExtraFE_Query_Local.SQL.Add(vQuery);
  uDB.ExtraFE_Query_Local.Open;
  uDB.ExtraFE_Query_Local.First;

  uDB_AUser.Local.ADDONS.Time_D.Menu_Position := uDB.ExtraFE_Query_Local.FieldByName('MENU_POSITION').AsInteger;
  uDB_AUser.Local.ADDONS.Time_D.First_Pop := uDB.ExtraFE_Query_Local.FieldByName('FIRST_POP').AsBoolean;
  uDB_AUser.Local.ADDONS.Time_D.Path.Images := uDB.ExtraFE_Query_Local.FieldByName('PATH_IMAGES').AsString;
  uDB_AUser.Local.ADDONS.Time_D.Path.Sounds := uDB.ExtraFE_Query_Local.FieldByName('PATH_SOUNDS').AsString;
  uDB_AUser.Local.ADDONS.Time_D.Path.Clocks := uDB.ExtraFE_Query_Local.FieldByName('PATH_CLOCKS').AsString;

  uTIme_Time_Actions.Get_Data;

  uDB_AUser.Local.ADDONS.Names[0]:= 'time';
end;

end.
