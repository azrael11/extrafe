<?xml version="1.0"?>

<!--
  Project: Zeos Database Objects.
  Module: Build & Test Environment.
  Copyrights: (c) Zeos Development Group 1999-2003
-->

<project name="compile" default="main" basedir=".">

  <property file="build.properties" />

  <property name="root.dir" value="${project.home}"/>
  <property name="packages.dir" value="${root.dir}/packages"/>
  <property name="src.dir" value="${root.dir}/src"/>
  <property name="test.dir" value="${root.dir}/test"/>
  <property name="examples.dir" value="${root.dir}/examples"/>
  <property name="component.dir" value="${src.dir}/component"/>
  <property name="componentdesign.dir" value="${src.dir}/componentdesign"/>
  <property name="core.dir" value="${src.dir}/core"/>
  <property name="dbc.dir" value="${src.dir}/dbc"/>
  <property name="parsesql.dir" value="${src.dir}/parsesql"/>
  <property name="plain.dir" value="${src.dir}/plain"/>
  <property name="logs.dir" value="${root.dir}/build/logs"/>

  <target name="prepare">
    <mkdir dir="${logs.dir}" />

    <tstamp>
      <format property="tstamp" pattern="yyyyMMdd" />
    </tstamp>

    <property name="log.file" value="${logs.dir}/compile-${tstamp}.log"/>
  </target>


  <target name="main" depends="prepare">

    <echo message="Compiling Zeos DBO Project..."
      file="${log.file}" append="true" />

  <condition property="delphi7.compile">
      <istrue value="${delphi7.active}"/>
    </condition>
    <antcall target="delphi7_compile"/>

    <condition property="delphi9.compile">
      <istrue value="${delphi9.active}"/>
    </condition>
    <antcall target="delphi9_compile"/>

    <condition property="delphi2005.compile">
      <istrue value="${delphi2005.active}"/>
    </condition>
    <antcall target="delphi2005_compile"/>

    <condition property="delphi2007.compile">
      <istrue value="${delphi2007.active}"/>
    </condition>
    <antcall target="delphi2007_compile"/>

    <condition property="delphi2009.compile">
      <istrue value="${delphi2009.active}"/>
    </condition>
    <antcall target="delphi2009_compile"/>

    <condition property="delphi2010.compile">
      <istrue value="${delphi2010.active}"/>
    </condition>
    <antcall target="delphi2010_compile"/>

    <condition property="delphiXE.compile">
      <istrue value="${delphiXE.active}"/>
    </condition>
    <antcall target="delphiXE_compile"/>

    <condition property="delphiXE2.compile">
      <istrue value="${delphiXE2.active}"/>
    </condition>
    <antcall target="delphiXE2_compile"/>	
	
    <condition property="lazarus.compile">
      <istrue value="${lazarus.active}"/>
    </condition>
    <antcall target="lazarus_compile"/>

  </target>

 <target name="delphi7_compile" if="delphi7.compile">
    <property name="bpl.dir" value="${delphi7.home}\Projects\bpl"/>
    <antcall target="delphi_compile">
      <param name="compile" value="${delphi7.compile}"/>
      <param name="compiler" value="delphi7"/>
      <param name="compiler.dir" value="${delphi7.home}"/>
    </antcall>
  </target>

  <target name="delphi9_compile" if="delphi9.compile">
    <property name="bpl.dir" value="${delphi9.bpl.dir}"/>
    <antcall target="delphi_compile">
      <param name="compile" value="${delphi9.compile}"/>
      <param name="compiler" value="delphi9"/>
      <param name="compiler.dir" value="${delphi9.home}"/>
    </antcall>
  </target>

  <target name="delphi2005_compile" if="delphi2005.compile">
    <property name="bpl.dir" value="${delphi2005.bpl.dir}"/>
    <antcall target="delphi_compile">
      <param name="compile" value="${delphi2005.compile}"/>
      <param name="compiler" value="delphi2005"/>
      <param name="compiler.dir" value="${delphi2005.home}"/>
    </antcall>
  </target>

 <target name="delphi2007_compile" if="delphi2007.compile">
    <property name="bpl.dir" value="${delphi2007.bpl.dir}"/>
    <antcall target="delphi_compile">
      <param name="compile" value="${delphi2007.compile}"/>
      <param name="compiler" value="delphi2007"/>
      <param name="compiler.dir" value="${delphi2007.home}"/>
    </antcall>
  </target>

 <target name="delphi2009_compile" if="delphi2009.compile">
    <property name="bpl.dir" value="${delphi2009.bpl.dir}"/>
    <antcall target="delphi_compile">
      <param name="compile" value="${delphi2009.compile}"/>
      <param name="compiler" value="delphi2009"/>
      <param name="compiler.dir" value="${delphi2009.home}"/>
    </antcall>
  </target>

 <target name="delphi2010_compile" if="delphi2010.compile">
    <property name="bpl.dir" value="${delphi2010.bpl.dir}"/>
    <antcall target="delphi_compile">
      <param name="compile" value="${delphi2010.compile}"/>
      <param name="compiler" value="delphi2010"/>
      <param name="compiler.dir" value="${delphi2010.home}"/>
    </antcall>
  </target>

 <target name="delphiXE_compile" if="delphiXE.compile">
    <property name="bpl.dir" value="${delphiXE.bpl.dir}"/>
    <antcall target="delphi_compile">
      <param name="compile" value="${delphiXE.compile}"/>
      <param name="compiler" value="delphiXE"/>
      <param name="compiler.dir" value="${delphiXE.home}"/>
    </antcall>
  </target>
  
 <target name="delphiXE2_compile" if="delphiXE2.compile">
    <property name="bpl.dir" value="${delphiXE2.bpl.dir}"/>
    <antcall target="delphi_compile">
      <param name="compile" value="${delphiXE2.compile}"/>
      <param name="compiler" value="delphiXE2"/>
      <param name="compiler.dir" value="${delphiXE2.home}"/>
    </antcall>
  </target>

  <target name="lazarus_compile" if="lazarus.compile">
     <echo message="Compiling packages for ${compiler}..."
      file="${log.file}" append="true" />

    <echo/>
    <echo message="Compiling Test packages for Lazarus..."/>
    <echo/>

   <antcall target="fpc_compile">
      <param name="compile" value="${lazarus.compile}"/>
      <param name="compiler" value="fpc"/>
      <param name="compiler.path" value="${lazarus.fpc.compiler}"/>
    </antcall>
  </target>

  <target name="delphi_compile">
    <echo message="Compiling packages for ${compiler}..."
      file="${log.file}" append="true" />

    <echo/>
    <echo message="Compiling Test packages for ${compiler}..."/>
    <echo/>

    <property name="package.dir" value="${packages.dir}/${compiler}"/>
    <property name="build.dir" value="${package.dir}/build"/>

    <antcall target="delphi_compile_project" inheritAll="true">
      <param name="project.name" value="ZTestAll.dpr"/>
    </antcall>

    <echo/>
  </target>

  <target name="cbuilder_compile">
    <echo message="Compiling packages for ${compiler}..."
      file="${log.file}" append="true" />

    <echo/>
    <echo message="Compiling Test packages for ${compiler}..."/>
    <echo/>

    <property name="package.dir" value="${packages.dir}/${compiler}"/>
    <property name="build.dir" value="${package.dir}/build"/>
    <property name="bpl.dir" value="${compiler.dir}/Projects/Bpl"/>
    <property name="lib.dir" value="${compiler.dir}/Projects/lib"/>

    <antcall target="cbuilder_compile_project" inheritAll="true">
      <param name="project.name" value="ZTestFramework"/>
      <param name="project.ext" value="bpk"/>
    </antcall>
    <antcall target="cbuilder_compile_project" inheritAll="true">
      <param name="project.name" value="ZTestCoreAll"/>
      <param name="project.ext" value="bpr"/>
    </antcall>
    <antcall target="cbuilder_compile_project" inheritAll="true">
      <param name="project.name" value="ZTestParseSqlAll"/>
      <param name="project.ext" value="bpr"/>
    </antcall>
    <antcall target="cbuilder_compile_project" inheritAll="true">
      <param name="project.name" value="ZTestDbcAll"/>
      <param name="project.ext" value="bpr"/>
    </antcall>
    <antcall target="cbuilder_compile_project" inheritAll="true">
      <param name="project.name" value="ZTestComponentAll"/>
      <param name="project.ext" value="bpr"/>
    </antcall>
    <antcall target="cbuilder_compile_project" inheritAll="true">
      <param name="project.name" value="ZTestBugReport"/>
      <param name="project.ext" value="bpr"/>
   </antcall>
    <antcall target="cbuilder_compile_project" inheritAll="true">
      <param name="project.name" value="ZTestPerformance"/>
      <param name="project.ext" value="bpr"/>
   </antcall>
   <antcall target="cbuilder_copy_bpl"/>
   <echo/>
  </target>

  <target name="cbuilder_copy_bpl" description="Copies bpl/tds/bpi/lib files to folder $(BCB)/Projects">
   <copy todir="${bpl.dir}" verbose="${copy.verbose}" overwrite="true">
      <fileset dir="${package.dir}">
	 <include name="*.bpl"/>
	 <include name="*.tds"/>
      </fileset>
   </copy>
   <copy todir="${lib.dir}" verbose="${copy.verbose}" overwrite="true">
      <fileset dir="${package.dir}">
	 <include name="*.bpi"/>
	 <include name="*.lib"/>
      </fileset>
   </copy>

  </target>

<target name = "fpc_compile">
    <property name="package.dir" value="${packages.dir}\lazarus"/>
    <property name="build.dir" value="${package.dir}\build"/>

    <antcall target="fpc_compile_project" inheritAll="true">
      <param name="project.name" value="testall"/>
      <param name="extra_unit_path" value=" -Fu../../test/core/ -Fu../../test/plain/ -Fu../../test/parsesql/ -Fu../../test/dbc/ -Fu../../test/component/ -Fu../../test/bugreport/ -Fu../../test/performance/"/>
    </antcall>
</target>


  <target name="delphi_compile_project">
    <echo message="Compiling ${project.name} ... "/>
    <exec dir="${package.dir}" executable="${compiler.dir}/bin/dcc32"
      output="${log.file}" append="true" failonerror="true">
      <arg value="-Q"/>
      <arg value="-B"/>
      <arg value="-N${build.dir}"/>
      <arg value="-E${build.dir}"/>
      <arg value="-U${build.dir};${bpl.dir};../../test/external/;../../test/framework/;../../test/core/;../../test/plain/;../../test/parsesql/;../../test/dbc/;../../test/component/;../../test/bugreport/;../../test/performance/;"/>
      <arg value="-LE${bpl.dir}"/>
      <arg value="-LN${bpl.dir}"/>
      <arg value="${project.name}"/>
    </exec>
  </target>

  <target name="cbuilder_compile_project">
    <echo message="Compiling ${project.name} ..." />
    <property name="compiler.path" location="${compiler.dir}" />

    <exec dir="${package.dir}" executable="${compiler.dir}/bin/bpr2mak.exe"
      output="${log.file}" append="true" failonerror="true">
      <arg value="${project.name}.${project.ext}"/>
   </exec>
   <exec dir="${package.dir}" executable="${compiler.dir}/bin/make.exe"
      output="${log.file}" append="true" failonerror="true">
      <arg value="-s"/>
      <arg value="-f${project.name}.mak"/>
      <env key="BCB" value="${compiler.path}"/>
      <env key="PATH" value="${compiler.path}/bin"/>
      <env key="LIB" value="${compiler.path}/lib"/>
   </exec>
  </target>

  <target name="fpc_compile_project">
    <echo message="Compiling Z${project.name} ..." />
    <exec dir="${package.dir}" executable="${compiler.path}"
      output="${log.file}" append="true" failonerror="true">
      <arg value="-S2cdgi"/>
      <arg value="-OG1"/>
      <arg value="-gl"/>
      <arg value="-vewnhi"/>
      <arg value="-l"/>
      <arg line=" -Fu${lazarus.path}/lcl/units/${lazarus.processor}-${lazarus.os}/ -Fu${lazarus.path}/lcl/units/${lazarus.processor}-${lazarus.os}/${lazarus.interface}/"/>
      <arg line=" -Fu${lazarus.path}/components/synedit/units/${lazarus.processor}-${lazarus.os}/ -Fu${lazarus.path}/components/synedit/units/${lazarus.processor}-${lazarus.os}/${lazarus.interface}/ "/>
      <arg line=" -Fu${lazarus.path}/components/fpcunit/lib/${lazarus.processor}-${lazarus.os}/${lazarus.interface}/ "/>
      <arg line=" -Fu${lazarus.path}/components/lazutils/lib/${lazarus.processor}-${lazarus.os}/ "/>
      <arg line=" -Fu../../test/framework/ ${extra_unit_path}"/>
      <arg value="-B"/>
        <arg value="-obuild/z${project.name}.exe"/>
      <arg value="-FUbuild"/>

      <arg value="z${project.name}.lpr"/>
    </exec>
   <chmod dir="${package.dir}/build/" perm="ugo+rx" includes="z${project.name}.exe"/>
</target>
  
</project>
